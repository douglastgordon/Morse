{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;ACnEkC;AACH;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,GAAG;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main.js\");\n","import { parseDurations, ON, OFF } from \"./translation\";\nimport { playSound, stopSound } from \"./sound\";\nimport makeGuide from \"./guide\"\n\nmakeGuide()\nconst userId = Math.floor((Math.random() * 1000000))\n\nconst ALL_MESSAGES = {\n  [userId]: [],\n}\n\nconst receiveMessage = (message, id) => {\n  if (!ALL_MESSAGES[id]) ALL_MESSAGES[id] = [];\n  ALL_MESSAGES[id].push(message);\n};\n\nconst updateMessage = id => {\n  const foreignUserMessageAreaNode = document.getElementById(id);\n  if (foreignUserMessageAreaNode) {\n    addMessageNode(foreignUserMessageAreaNode, parseDurations(ALL_MESSAGES[id]));\n  } else {\n    const newForeignUserTextNode = makeMessageArea(id);\n    addMessageNode(newForeignUserTextNode, parseDurations(ALL_MESSAGES[id]));\n  }\n};\n\nconst insertMessage = message => {\n  ALL_MESSAGES[userId].push(message);\n  socket.emit(\"morse message\", message, userId);\n};\n\n\n// socket shit\nconst socket = io();\nsocket.on(\"morse message\", (message, id) => {\n  if (userId !== id) {\n    receiveMessage(message, id);\n    updateMessage(id);\n  }\n});\n\n\n// dom interaction\n\nlet lastDownTime = null\nlet lastUpTime = (new Date()).getTime()\n\ndocument.addEventListener(\"keydown\", (event) => {\n  if (event.code === \"Space\" && !lastDownTime) {\n    playSound()\n    lastDownTime = (new Date()).getTime();\n    insertMessage([OFF, lastDownTime - lastUpTime], userId)\n  }\n});\n\ndocument.addEventListener(\"keyup\", (event) => {\n  if (event.code === \"Space\") {\n    stopSound()\n    lastUpTime = (new Date()).getTime();\n    const pressDuration = lastUpTime - lastDownTime;\n    insertMessage([ON, pressDuration], userId)\n    lastDownTime = null;\n    addMessageNode(myMessageArea, parseDurations(ALL_MESSAGES[userId]))\n    myMessageArea.querySelector(\".message\").innerHTML = parseDurations(ALL_MESSAGES[userId])\n  }\n});\n\nconst makeMessageArea = (id, name=\"\") => {\n  const messageArea = document.createElement(\"article\");\n  messageArea.id = id;\n\n  const nameNode= document.createElement(\"p\");\n  nameNode.classList.add(\"name\");\n  nameNode.innerHTML = name || `user ${id}`;\n\n  const message = document.createElement(\"p\");\n  message.classList.add(\"message\");\n\n  messageArea.appendChild(nameNode);\n  messageArea.appendChild(message);\n  main.appendChild(messageArea);\n  return messageArea;\n};\n\nconst addMessageNode = (messageArea, message) => {\n  messageArea.querySelector(\".message\").innerHTML = message;\n};\n\nconst main = document.getElementById(\"main\");\nconst myMessageArea = makeMessageArea(userId, \"you\");\n"],"sourceRoot":""}